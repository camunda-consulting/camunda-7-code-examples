<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.camunda.demo.webinar</groupId>
	<artifactId>webinar-data-connectors-scripts</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>war</packaging>

	<name>camunda BPM Process Application: webinar-data-connectors-scripts</name>
	<description>Process application that uses the camunda BPM Platform and has been generated by the Maven archetype 'camunda-archetype-servlet-war-7.2.0'</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<camunda.version>7.2.1-ee</camunda.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-bom</artifactId>
				<scope>import</scope>
				<type>pom</type>
				<version>${camunda.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<!-- process engine, needs to be provided -->
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<!-- AssertJ Testing Library -->
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-assert</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Required to use Sping dataformat in unit tests -->
		<dependency>
			<groupId>org.camunda.spin</groupId>
			<artifactId>camunda-spin-dataformat-all</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine-plugin-spin</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.camunda.template-engines</groupId>
			<artifactId>camunda-template-engines-freemarker</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- I do not want to use ee only feature for this demo 
		<dependency>
			<groupId>org.camunda.bpm.extension.xslt</groupId>
			<artifactId>camunda-bpm-xslt</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
		 -->

		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine-plugin-connect</artifactId>
		</dependency>
		<dependency>
			<groupId>org.camunda.connect</groupId>
			<artifactId>camunda-connect-soap-http-client</artifactId>
		</dependency>

		<dependency>
			<groupId>com.camunda.demo.webinar</groupId>
			<artifactId>webinar-file-connector</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>

		<!-- Groovy as JSR-223 scripting engine -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- Needed for InMemoryH2Test -->
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.2.220</version>
			<scope>test</scope>
		</dependency>

		<!-- Add your own dependencies here, if in compile scope, they are added 
			to the war -->

		<dependency>
			<groupId>commons-email</groupId>
			<artifactId>commons-email</artifactId>
			<version>1.1</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>camunda-bpm-nexus</id>
			<name>camunda BPM Maven Repository</name>
			<url>https://artifacts.camunda.com/artifactory/public/</url>
		</repository>
	</repositories>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<!-- A web.xml is no longer required. -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
