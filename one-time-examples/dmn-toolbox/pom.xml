<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.camunda.demo.dmntoolbox</groupId>
	<artifactId>dmn-toolbox</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<packaging>war</packaging>

	<name>Camunda BPM Process Application</name>
	<description>A Process Application for [Camunda BPM](http://docs.camunda.org). [The project has been generated by the Maven archetype 'camunda-archetype-servlet-war-7.4.0']</description>

	<properties>
		<camunda.version>7.6.0-alpha5</camunda.version>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<failOnMissingWebXml>false</failOnMissingWebXml>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-bom</artifactId>
				<version>${camunda.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.camunda.bpm.dmn</groupId>
				<artifactId>camunda-engine-dmn-bom</artifactId>
				<version>${camunda.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<!-- process engine, needs to be provided -->
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<!-- decision engine -->
			<groupId>org.camunda.bpm.dmn</groupId>
			<artifactId>camunda-engine-dmn</artifactId>
			<scope>provided</scope>

		</dependency>

		<dependency>
			<groupId>org.camunda.bpm.extension.dmn</groupId>
			<artifactId>dmn-xlsx-converter</artifactId>
			<version>0.2.0-SNAPSHOT</version>			
		</dependency>
		
		<!-- added because of http://stackoverflow.com/questions/23825759/cannot-use-docx4j-on-wildfly-8 -->
		<dependency>
			<groupId>com.googlecode.jaxb-namespaceprefixmapper-interfaces</groupId>
			<artifactId>JAXBNamespacePrefixMapper</artifactId>
			<version>2.2.4</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.5</version>
		</dependency>

		<dependency>
			<!-- AssertJ Testing Library -->
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-assert</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Required to use Spin dataformat support in unit tests -->
		<dependency>
			<groupId>org.camunda.spin</groupId>
			<artifactId>camunda-spin-dataformat-all</artifactId>
			<scope>test</scope>

		</dependency>
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine-plugin-spin</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Required to use Connectors in unit tests -->
		<dependency>
			<groupId>org.camunda.connect</groupId>
			<artifactId>camunda-connect-connectors-all</artifactId>
			<scope>test</scope>

		</dependency>
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine-plugin-connect</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Java EE 6 APIs <dependency> <groupId>javax</groupId> <artifactId>javaee-api</artifactId> 
			<version>6.0</version> <scope>provided</scope> </dependency> Note that we 
			cannot use the javax.javaee-api if running Arquillian, see https://developer.jboss.org/wiki/WhatsTheCauseOfThisExceptionJavalangClassFormatErrorAbsentCode 
			for the reasons why. -->
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>1.0.0.Final</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>



		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- Needed for InMemoryH2Test -->
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.168</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- Used to generate test coverage reports, see https://github.com/camunda/camunda-consulting/tree/master/snippets/process-test-coverage -->
			<groupId>org.camunda.consulting.snippets</groupId>
			<artifactId>process-test-coverage</artifactId>
			<version>0.2.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- use logback as logger -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.2</version>
			<scope>test</scope>

		</dependency>


		<dependency>
			<!-- java util logging => slf4j -->
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>1.7.7</version>
			<scope>test</scope>
		</dependency>

		<!-- Add your own dependencies here, if in compile scope, they are added 
			to the war -->

		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.1</version>
			<!-- because of https://developer.jboss.org/thread/242194?start=0&tstart=0 -->
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>camunda-bpm-nexus</id>
			<name>Camunda BPM Maven Repository</name>
			<url>https://artifacts.camunda.com/artifactory/public/</url>
		</repository>
	</repositories>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<!-- Allows to deploy the application using: mvn clean package antrun:run 
					Follow the instructions in build.properties.example to make it work! -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<configuration>
					<tasks>
						<ant antfile="${basedir}/build.xml">
							<target name="copy.war.into.tomcat" />
						</ant>
					</tasks>
				</configuration>
			</plugin>
			<!-- run this plugin with first: mvn clean tomcat7:deploy then: mvn clean 
				tomcat7:redeploy finally: mvn tomcat7:undeploy To use this plugin, add these 
				lines to your tomcat-users.xml: (inside the <tomcat-users>-tag) <role rolename="manager-script"/> 
				<user username="admin" password="admin" roles="manager-script"/> -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<username>admin</username>
					<password>admin</password>
				</configuration>
			</plugin>
			<plugin>
				<!-- Usage: mvn jboss-as:deploy See also: https://docs.jboss.org/jbossas/7/plugins/maven/latest/examples/deployment-example.html -->
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>7.6.Final</version>
			</plugin>
			<plugin>
				<!-- Usage: mvn wildfly:deploy See also: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html -->
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>1.0.2.Final</version>
			</plugin>
		</plugins>
	</build>
</project>
