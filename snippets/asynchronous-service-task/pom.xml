<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.camunda.bpm.consulting.snippet</groupId>
  <artifactId>asynchronous-service-task</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <packaging>war</packaging>

  <name>Asynchronous Service Task</name>
  <description>An asynchronous Service Task example for [Camunda BPM](http://docs.camunda.org) using a scheduled executor. [The project has been generated by the Maven archetype 'camunda-archetype-servlet-war-7.10.1-SNAPSHOT']</description>

  <properties>
    <camunda.version>7.13.0</camunda.version>
    <!--
    Adjust if you want to use Camunda Enterprise Edition (EE):
    <camunda.version>7.10.0-ee</camunda.version>
    Make sure you also switch to EE repository below
    -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <failOnMissingWebXml>false</failOnMissingWebXml>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-bom</artifactId>
        <version>${camunda.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <!-- process engine, needs to be 'provided' because it's already a shared library in the container -->
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <!-- AssertJ Testing Library -->
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Required to use Spin dataformat support in unit tests -->
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-spin</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Required to use Templates in unit tests -->
    <dependency>
      <groupId>org.camunda.template-engines</groupId>
      <artifactId>camunda-template-engines-freemarker</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.template-engines</groupId>
      <artifactId>camunda-template-engines-velocity</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- Needed for InMemoryH2Test -->
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>2.2.220</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- Used to generate test coverage reports, see https://github.com/camunda/camunda-consulting/tree/master/snippets/camunda-bpm-process-test-coverage -->
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-process-test-coverage</artifactId>
      <version>0.3.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- use logback as logger -->
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <!-- apache commons logging => slf4j -->
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.25</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!--  java util logging => slf4j -->
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.25</version>
      <scope>test</scope>
    </dependency>

    <!-- Add your own dependencies here, if in compile scope, they are added to the war -->

  </dependencies>

  <repositories>
    <repository>
      <id>camunda-bpm-nexus</id>
      <name>Camunda Maven Repository</name>
      <url>https://artifacts.camunda.com/artifactory/public/</url>
    </repository>
    <!-- enable this for EE dependencies (requires credentials in ~/.m2/settings.xml)
    <repository>
      <id>camunda-bpm-nexus-ee</id>
      <name>Camunda Enterprise Maven Repository</name>
      <url>https://artifacts.camunda.com/artifactory/camunda-bpm-ee/</url>
    </repository>
    -->
  </repositories>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <!-- Deploy to Tomcat using: mvn clean package antrun:run
             Follow the instructions in build.properties.example to make it work!-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <configuration>
          <tasks>
            <ant antfile="${basedir}/build.xml">
              <target name="copy.war.into.tomcat" />
            </ant>
          </tasks>
        </configuration>
      </plugin>
      <!-- Tomcat Maven Plugin

      Deploy to Tomcat using:
      mvn clean tomcat7:deploy

      Redeploy:
      mvn clean tomcat7:redeploy

      Undeploy:
      mvn tomcat7:undeploy

           To use this plugin, add these lines to your tomcat-users.xml: (inside the <tomcat-users>-tag)
           <role rolename="manager-script"/>
           <user username="admin" password="admin" roles="manager-script"/>

       -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <url>http://localhost:8080/manager/text</url>
          <username>admin</username>
          <password>admin</password>
        </configuration>
      </plugin>
      <plugin>
        <!-- Deploy to JBoss AS7: mvn clean jboss-as:deploy See also: https://docs.jboss.org/jbossas/7/plugins/maven/latest/examples/deployment-example.html -->
        <groupId>org.jboss.as.plugins</groupId>
        <artifactId>jboss-as-maven-plugin</artifactId>
        <version>7.9.Final</version>
      </plugin>
      <plugin>
        <!-- Deploy to Wildfly: mvn clean wildfly:deploy See also: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html -->
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <version>2.0.1.Final</version>
      </plugin>
    </plugins>
  </build>
</project>
